#include <stdio.h>
#include <math.h>
int factors[100], exponents[100];
int length=0;

void prime_factorisation(int n)
{
    int factor=2;
    int temp=n;
    if(n>1)
    {
        while(n>1&&factor<=ceil(pow(temp, 0.5)))
        {
            int repetitions=0;
            while(n%factor==0)
            {
                n=n/factor;
                repetitions++;
            }
            
            if(repetitions>0)
            {
                exponents[length]=repetitions;
                factors[length++]=factor;
            }
            factor++;
        }
	//Here the ceil is important always.
        if(factor>=ceil(pow(temp, 0.5)))
        {
            printf("Prime Number");
        }
    }
    else
    {
            exponents[length]=1;
            factors[length++]=1;
    }
}
int main()
{
    int n;
    //The time complexity is going to be square root of n.
    printf("Enter the value of n: ");
    scanf("%d", &n);
    
    prime_factorisation(n);
    
    for(int i=0;i<length;i++)
    {
        printf("%d-%d, ", factors[i], exponents[i]);
    }

    return 0;
}